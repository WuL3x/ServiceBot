import sqlite3

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

from back.config import CHANNEL_ID
from back.main import bot, dp


class StatusForm(StatesGroup):
    order_id = State()
    new_status = State()


@dp.message_handler(commands=['status'], chat_id=CHANNEL_ID)
async def update_status(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞—è –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:")

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
    await StatusForm.order_id.set()


@dp.message_handler(state=StatusForm.order_id, chat_id=CHANNEL_ID)
async def process_order_id(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
    order_id = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    if not order_id.isdigit():
        await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(order_id=order_id)

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    await StatusForm.new_status.set()

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –∑–∞–∫–∞–∑–∞
    status_buttons = [
        types.InlineKeyboardButton("–ù–µ –Ω–∞—á–∞—Ç–æ", callback_data="status:1"),
        types.InlineKeyboardButton("–í –ø—Ä–æ—Ü–µ—Å—Å–µ", callback_data="status:2"),
        types.InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–µ–Ω–æ", callback_data="status:3")
    ]

    # –°–æ–∑–¥–∞–µ–º InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤
    status_keyboard = types.InlineKeyboardMarkup(row_width=1)
    status_keyboard.add(*status_buttons)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤
    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞:", reply_markup=status_keyboard)


@dp.callback_query_handler(lambda callback_query: callback_query.data.startswith('status:'),
                           state=StatusForm.new_status, chat_id=CHANNEL_ID)
async def process_order_status(callback_query: types.CallbackQuery, state: FSMContext):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–∑ callback query
    new_status_id = callback_query.data.split(':')[1]

    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
    data = await state.get_data()
    order_id = data.get('order_id')

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('E:/sqlite3/Servigo')
    cursor = conn.cursor()
    query = "UPDATE Orders SET id_status=? WHERE id_order=?"
    cursor.execute(query, (new_status_id, order_id))
    conn.commit()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    que_id_client = "SELECT id_client FROM orders WHERE id_order=?"
    cursor.execute(que_id_client, (order_id,))
    id_client = cursor.fetchone()[0]
    query = "SELECT order_status FROM status WHERE id_status = ?"
    cursor.execute(query, (new_status_id,))
    status_name = cursor.fetchone()[0]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.send_message(id_client, text=f'–í–∞—à –∑–∞–∫–∞–∑ –æ–±–Ω–æ–≤–∏–ª —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å: {status_name} üåö')

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.finish()
